{"version":3,"sources":["components/AddCategory.jsx","components/AddMensaje.jsx","components/MessageElement.jsx","components/MessageGrid.jsx","components/Messages.jsx","components/Toast.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setrequest1State","useState","inputValue","setinputValue","secreto","setsecreto","onSubmit","e","preventDefault","console","log","requestOptions","method","headers","body","JSON","stringify","key","shared_secret","fetch","then","response","a","text","data","ok","olf","setTimeout","catch","error","saveSecreto","className","value","onChange","target","type","id","aria-describedby","AddMensaje","setrequest2State","setMessageRequest2","tag","settag","xkey","setXkey","secret","setSecret","xroute","setXroute","xsignature","setXsignature","calcular_signature","arreglodeparametros","push","sort","cadena","reduce","acc","element","hex","CryptoJS","HmacSHA256","toString","enc","Hex","old","saveMessage","signature","msg","tags","url","json","message","placeholder","onClick","MessageElement","mensaje","MessageGrid","mensajes","map","Messages","setmensajes","setrequest3State","setMessageRequest3","idMensaje","setIdMensaje","calcular_signature2","buscar_id","buscar_tag","Toast","requeststate","role","GifExpertApp","request1State","request3State","messageRequest3","request2State","messageRequest2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31e8db90.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nexport const AddCategory = ({setrequest1State}) => {\n\n    const [inputValue, setinputValue] = useState('');\n    const [secreto, setsecreto] = useState('');\n    \n\n    const handleInputChange = (e) => {\n        //console.log(e.target.value);\n        setinputValue(e.target.value);\n    }\n    const handleTagsChange = (e) => {\n        //console.log(e.target.value);\n        setsecreto(e.target.value);\n    }\n\n    const saveSecreto = () =>{\n        console.log(\"En saveSecreto\");\n        console.log(\"SE VA A  GUARDAR UN SECRETO::\",inputValue,secreto);\n        let requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ key: inputValue,shared_secret:secreto })\n        };\n        let url = `http://34.70.104.102:3001/credential`;\n        fetch(url, requestOptions)\n        .then(async response => {\n            const data = await response.text();\n            console.log(\"data::\",data);\n            if (!response.ok) {\n                console.log(\"ENTRO A QUE NO ESTA OK\");\n                setrequest1State(olf => true);\n\n                setTimeout(()=>{\n                    setrequest1State(olf => false);\n                },2000);\n            }\n            // check for error response\n            \n        })\n        .catch(error => {\n            //this.setState({ errorMessage: error.toString() });\n            console.error('There was an error!', error);\n        });\n\n\n    }\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        saveSecreto();\n        setinputValue('');\n        setsecreto('');\n        /*\n        if ( inputValue.trim().length >2){\n            setCategories(old => [ ...old, inputValue]);\n            setinputValue('');\n\n        }\n        */\n        \n        //console.log(e);\n    }\n    \n    return (\n        \n        <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label >Key</label>\n          <input value={inputValue} onChange={handleInputChange}type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Esta es el nombre con que se va a recuperar el secreto.</small>\n        </div>\n        <div className=\"form-group\">\n          <label >Secret</label>\n          <input type=\"text\"  onChange={handleTagsChange}className=\"form-control\" id=\"exampleInputPassword1\"/>\n        </div>\n        \n        <button type=\"submit\" className=\"btn btn-primary\" >Agregar Secreto</button>\n      </form>\n        \n    )\n}\n/*\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n*/","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport CryptoJS from 'crypto-js';\n\nexport const AddMensaje = ({setrequest2State,setMessageRequest2}) => {\n\n    const [inputValue, setinputValue] = useState('');\n    const handleInputValChange = (e) => {\n      //console.log(e.target.value);\n      setinputValue(e.target.value);\n  }\n    const [tag, settag] = useState('');\n    const handleTagValChange = (e) => {\n        //console.log(e.target.value);\n        settag(e.target.value);\n    }\n    const [xkey, setXkey] = useState(\"\");\n    const handleXKeyValChange = (e) => {\n        //console.log(e.target.value);\n        setXkey(e.target.value);\n    }\n\n    const [secret, setSecret] = useState(\"\");\n    const handleSecretValChange = (e) => {\n        //console.log(e.target.value);\n        setSecret(e.target.value);\n    }\n    const [xroute, setXroute] = useState(\"\");\n    const handleXRouteValChange = (e) => {\n        //console.log(e.target.value);\n        setXroute(e.target.value);\n    }\n    const [xsignature, setXsignature] = useState(\"\");\n    const handleXSignatureValChange = (e) => {\n        //console.log(e.target.value);\n        setXsignature(e.target.value);\n    }\n    \n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        \n            //setCategories(old => [ ...old, inputValue]);\n            setinputValue('');\n            settag('');\n            saveMessage();\n\n    \n        \n        //console.log(e);\n    }\n    const calcular_signature = () =>{\n      let arreglodeparametros = [];\n      arreglodeparametros.push(`msg${inputValue}`);\n      arreglodeparametros.push(`tags${tag}`);\n      arreglodeparametros.push(`X-Route${xroute}`);\n\n      arreglodeparametros.sort();\n      let cadena = arreglodeparametros.reduce((acc, element) => `${acc};${element}`);\n      let words = CryptoJS.HmacSHA256(cadena, secret);\n      let hex = words.toString(CryptoJS.enc.Hex);\n      console.log(\"SIGNATURA CALCULADA: \"+hex);\n      setXsignature(old => hex);\n      return hex;\n  }\n    const saveMessage = () =>{\n      console.log(\"En saveMessage\");\n      console.log(\"SE VA A GUARDAR UN MENSAJE CON\",xkey,secret, xroute, xsignature ,inputValue,tag);\n      let signature = calcular_signature();\n      setXsignature(old => signature);\n      let requestOptions = {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json','X-Key':xkey,'X-Route':xroute,'X-Signature':xsignature },\n          body: JSON.stringify({ msg: inputValue,tags:tag })\n\n      };\n      let url = `http://34.70.104.102:3001/message`;\n      console.log(\"URL\",url);\n      fetch(url, requestOptions)\n      .then(async response => {\n          const data = await response.json();\n          console.log(\"data::\",data);\n          if (!response.ok) {\n              console.log(\"ENTRO A QUE NO ESTA OK\", data.message);\n              //setmensajes(old => []);\n              setMessageRequest2(old => data.message);\n              setrequest2State(old => true);\n\n\n              setTimeout(()=>{\n                  setrequest2State(olf => false);\n              },3000);\n          }\n          else{\n              console.log(\"BUSQUEDA POR ID SI FUNCIONO\");\n              console.log(data);\n              //setmensajes(old => [data])\n          }\n          \n          \n      })\n      .catch(error => {\n          //this.setState({ errorMessage: error.toString() });\n          console.error('There was an error!', error);\n      });\n\n\n  }\n    return (\n        <div>\n         <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" placeholder=\"KEY\" onChange={handleXKeyValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" placeholder=\"SECRET\" onChange={handleSecretValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">    \n                    <input type=\"text\" placeholder=\"ROUTE\" onChange={handleXRouteValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">\n                    <input  value={xsignature} type=\"text\" placeholder=\"SIGNATURA\" onChange={handleXSignatureValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                </div>\n        <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label >Mensaje</label>\n          <input value={inputValue} onChange={handleInputValChange} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Contenido.</small>\n        </div>\n        <div className=\"form-group\">\n          <label >Tags</label>\n          <input value={tag} onChange={handleTagValChange} type=\"text\" className=\"form-control\" id=\"exampleInputPassword1\"/>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Separa los tags por un .(punto)</small>\n        </div>\n        <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <button type=\"button\" onClick={calcular_signature}  className=\"btn btn-primary\" >Calcular signatura</button>\n                    </div>\n                    <div className=\"col-sm-3\">\n                        <button type=\"submit\" className=\"btn btn-primary\" >Crear-Mensaje</button>\n                    </div>\n\n                </div>\n      </form>\n      </div>\n        \n    )\n}","import React from 'react'\n\nexport const MessageElement = ({mensaje}) => {\n    console.log(\"%%%%%\",mensaje)\n    return (\n        <div className=\"card\">\n    \n    <div className=\"card-body\">\n    <h5 className=\"card-title\">{ mensaje.id }</h5>\n    <p className=\"card-text\">{mensaje.msg}</p>\n    <p className=\"card-text\"><small className=\"text-muted\">{mensaje.tags}</small></p>\n    </div>\n  </div>\n    )\n}\n","import React from 'react'\nimport { MessageElement } from './MessageElement';\n\nexport const MessageGrid = ({mensajes}) => {\n    console.log(\"DESDE EL MessageGrid::\",mensajes);\n   \n    return (\n        <>\n            \n            <div className=\"card-group\"> \n            {\n                mensajes.map(msg =>{\n                    console.log(\"**********\",msg);\n                    \n                return <MessageElement key={msg.id} mensaje={msg}></MessageElement>\n                })\n            }\n            </div>\n    \n        </>\n    )\n}\n","//rafc\nimport React, { useState } from 'react'\nimport { getMessage } from '../helpers/getMessage';\nimport CryptoJS from 'crypto-js';\nexport const Messages = ({setmensajes,setrequest3State,setMessageRequest3}) => {\n\n    const [idMensaje, setIdMensaje] = useState('');\n    const handleIdMensajeValChange = (e) => {\n        //console.log(e.target.value);\n        setIdMensaje(e.target.value);\n    }\n    const [tag, settag] = useState('');\n    const handleTagValChange = (e) => {\n        //console.log(e.target.value);\n        settag(e.target.value);\n    }\n    const [xkey, setXkey] = useState(\"\");\n    const handleXKeyValChange = (e) => {\n        //console.log(e.target.value);\n        setXkey(e.target.value);\n    }\n\n    const [secret, setSecret] = useState(\"\");\n    const handleSecretValChange = (e) => {\n        //console.log(e.target.value);\n        setSecret(e.target.value);\n    }\n    const [xroute, setXroute] = useState(\"\");\n    const handleXRouteValChange = (e) => {\n        //console.log(e.target.value);\n        setXroute(e.target.value);\n    }\n    const [xsignature, setXsignature] = useState(\"\");\n    const handleXSignatureValChange = (e) => {\n        //console.log(e.target.value);\n        setXsignature(e.target.value);\n    }\n/*\n    const [keyVal, setKeyVal] = useState(\"\");\n    const [routeVal, setrouteVal] = useState(\"\");\n    const [signVal, setSignVal] = useState(\"\")\n*/\n\n    const calcular_signature = () =>{\n        let arreglodeparametros = [];\n        arreglodeparametros.push(`id${idMensaje}`);\n        arreglodeparametros.push(`X-Route${xroute}`);\n\n        arreglodeparametros.sort();\n        let cadena = arreglodeparametros.reduce((acc, element) => `${acc};${element}`);\n        let words = CryptoJS.HmacSHA256(cadena, secret);\n        let hex = words.toString(CryptoJS.enc.Hex);\n        console.log(\"SIGNATURA CALCULADA: \"+hex);\n        setXsignature(old => hex);\n        return hex;\n    }\n    const calcular_signature2 = () =>{\n        let arreglodeparametros = [];\n        arreglodeparametros.push(`tag${tag}`);\n        arreglodeparametros.push(`X-Route${xroute}`);\n\n        arreglodeparametros.sort();\n        let cadena = arreglodeparametros.reduce((acc, element) => `${acc};${element}`);\n        let words = CryptoJS.HmacSHA256(cadena, secret);\n        let hex = words.toString(CryptoJS.enc.Hex);\n        console.log(\"SIGNATURA CALCULADA: \"+hex);\n        setXsignature(old => hex);\n        return hex;\n    }\n\n    \n   \n    const handleSubmit1 = (e) =>{\n        e.preventDefault();\n        buscar_id();\n        \n    }\n\n    const handleSubmit2 = (e) =>{\n        e.preventDefault();\n        buscar_tag();\n        \n    }\n\n\n\n    const buscar_id = () =>{\n        console.log(\"En buscar_id\");\n        console.log(\"SE VA A BUSCAR UN MENSAJE CON ID::\",xkey,secret, xroute, xsignature ,idMensaje);\n        let signature = calcular_signature();\n        setXsignature(old => signature);\n        let requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json','X-Key':xkey,'X-Route':xroute,'X-Signature':xsignature }\n        };\n        let url = `http://34.70.104.102:3001/message/`+idMensaje;\n        console.log(\"URL\",url);\n        fetch(url, requestOptions)\n        .then(async response => {\n            const data = await response.json();\n            console.log(\"data::\",data);\n            if (!response.ok) {\n                console.log(\"ENTRO A QUE NO ESTA OK\", data.message);\n                setmensajes(old => []);\n                setMessageRequest3(old => data.message);\n                setrequest3State(old => true);\n\n\n                setTimeout(()=>{\n                    setrequest3State(olf => false);\n                },3000);\n            }\n            else{\n                console.log(\"BUSQUEDA POR ID SI FUNCIONO\");\n                console.log(data.msg);\n                setmensajes(old => [data])\n            }\n            \n            \n        })\n        .catch(error => {\n            //this.setState({ errorMessage: error.toString() });\n            console.error('There was an error!', error);\n        });\n\n\n    }\n\n    const buscar_tag = () =>{\n        console.log(\"En buscar_id\");\n        console.log(\"SE VA A BUSCAR UN MENSAJE CON TAG::\",xkey,secret, xroute, xsignature ,tag);\n        let signature = calcular_signature2();\n        setXsignature(old => signature);\n        let requestOptions = {\n            method: 'GET',\n            headers: { 'Content-Type': 'application/json','X-Key':xkey,'X-Route':xroute,'X-Signature':xsignature }\n        };\n        let url = `http://34.70.104.102:3001/messages/${tag}`;\n        console.log(\"URL\",url);\n        fetch(url, requestOptions)\n        .then(async response => {\n            const data = await response.json();\n            console.log(\"data::\",data);\n            if (!response.ok) {\n                console.log(\"ENTRO A QUE NO ESTA OK\", data.message);\n                setmensajes(old => []);\n                setMessageRequest3(old => data.message);\n                setrequest3State(old => true);\n\n\n                setTimeout(()=>{\n                    setrequest3State(olf => false);\n                },3000);\n            }\n            else{\n                console.log(\"BUSQUEDA POR TAG SI FUNCIONO\");\n                console.log(data.data);\n                setmensajes(old => data.data)\n            }\n            \n            \n        })\n        .catch(error => {\n            //this.setState({ errorMessage: error.toString() });\n            console.error('There was an error!', error);\n        });\n\n\n    }\n    return (\n        <div>\n            \n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" placeholder=\"KEY\" onChange={handleXKeyValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">\n                    <input type=\"text\" placeholder=\"SECRET\" onChange={handleSecretValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">    \n                    <input type=\"text\" placeholder=\"ROUTE\" onChange={handleXRouteValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n                <div className=\"col-sm-3\">\n                    <input  value={xsignature} type=\"text\" placeholder=\"SIGNATURA\" onChange={handleXSignatureValChange}  className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                </div>\n            </div>\n            <h4>Buscar por ID</h4>\n            <form onSubmit={handleSubmit1}>\n                <div className=\"form-group\">\n                <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <label >ID:</label>\n                            <input value={idMensaje}type=\"text\" onChange={handleIdMensajeValChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                        </div>\n                        <div className=\"col-sm-4\">\n                           \n                            \n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <button type=\"button\" onClick={calcular_signature}  className=\"btn btn-primary\" >Calcular signatura</button>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <button type=\"submit\" className=\"btn btn-primary\" >Buscar</button>\n                    </div>\n\n                </div>\n                \n                \n            </form>\n            <br></br>\n            <h4>Buscar por TAG</h4>\n            <form onSubmit={handleSubmit2}>\n                <div className=\"form-group\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-8\">\n                            <label >TAG:</label>\n                            <input value={tag}type=\"text\" onChange={handleTagValChange} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\n                        </div>\n                       \n                    </div>\n                                  \n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <button  type=\"button\" onClick={calcular_signature2}  className=\"btn btn-primary\" >Calcular signatura</button>\n                    </div>\n                    <div className=\"col-sm-2\">\n                        <button type=\"submit\" className=\"btn btn-primary\" >Buscar</button>\n                    </div>\n\n                </div>\n                \n            </form>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Toast = ({requeststate,mensaje}) => {\n    return requeststate ?(\n        <div className=\"alert alert-danger\" role=\"alert\">\n  { mensaje }\n</div>\n    ):null\n}\n","import React from 'react'\nimport { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\nimport { AddMensaje } from './components/AddMensaje';\nimport { MessageGrid } from './components/MessageGrid';\nimport { Messages } from './components/Messages';\nimport { Toast } from './components/Toast';\n\nexport const GifExpertApp = () => {\n\n    //const [categories, setCategories] = useState(['One Punch']);\n    const [mensajes, setmensajes] = useState([]);\n\n    const [request1State, setrequest1State] = useState(false);\n    const [request3State, setrequest3State] = useState(false);\n    const [messageRequest3, setMessageRequest3] = useState(\"\");\n\n    const [request2State, setrequest2State] = useState(false);\n    const [messageRequest2, setMessageRequest2] = useState(\"\");\n    /*\n    const handleAdd = () =>{\n        //categories.push('jujuju');\n        setCategories([...categories,'jijijiji' ]);\n    }\n    */\n    return ( \n        <div>\n            <h2> Prueba nuestra API! </h2>\n            <h3> Crea una nuevo secreto..</h3>\n            <Toast requeststate={request1State} mensaje={\"ERROR EN LA CREACION DE SECRETO! YA EXISTE..\"}></Toast> \n            <AddCategory setrequest1State={setrequest1State}> </AddCategory>\n            <hr></hr>\n             <h3> Crea una nuevo mensaje..</h3>\n             <Toast requeststate={request2State} mensaje={messageRequest2}></Toast>\n            <AddMensaje setrequest2State={setrequest2State} setMessageRequest2={setMessageRequest2}></AddMensaje>\n            <hr></hr>\n            <h3> Busca Un mensaje..</h3>\n            <Toast requeststate={request3State} mensaje={messageRequest3}></Toast> \n            <Messages setmensajes={setmensajes} setrequest3State={setrequest3State} setMessageRequest3={setMessageRequest3} ></Messages>\n            <MessageGrid mensajes={mensajes}></MessageGrid>\n        <hr/>\n        \n        <ol>\n            \n            {\n                /*\n                categories.map(category =>{\n                return <GifGrid key={category} category={category}></GifGrid>\n                })\n                */\n            }\n            \n        </ol>\n        </div>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n\n    <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}